name: 🔧 Development Build

on:
  push:
    branches: [ develop, feature/* ]
  pull_request:
    branches: [ develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  security-scan:
    name: 🔒 CodeQL Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  test-and-build:
    name: 🧪 Test & Build Dev Image
    runs-on: ubuntu-latest
    needs: security-scan
    permissions:
      contents: read
      packages: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run linter
        run: npm run lint

      - name: 🧪 Run tests
        run: npm test

      - name: 🏗️ Build TypeScript
        run: npm run build

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-dev
            type=ref,event=pr,suffix=-pr
            type=sha,prefix=dev-

      - name: 🐳 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.multistage
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 📋 Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🐳 **Docker image built successfully!**
              
              You can test this PR by updating your MCP configuration:
              \`\`\`json
              {
                "servers": {
                  "k8s-deployment-server": {
                    "command": "docker",
                    "args": [
                      "run", "-i", "--rm",
                      "-v", "/path/to/.kube:/home/mcp/.kube:ro",
                      "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}"
                    ],
                    "type": "stdio"
                  }
                }
              }
              \`\`\`
              
              ✅ Security scan passed (CodeQL)
              ✅ Tests passed
              ✅ Build successful
              ✅ Docker image ready for testing`
            });
